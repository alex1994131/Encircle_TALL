/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/js/campaign.js":
/*!*****************************************!*\
  !*** ./resources/assets/js/campaign.js ***!
  \*****************************************/
/***/ (() => {

eval("function deleteMessage(index) {\n  swal({\n    title: \"Are you sure?\",\n    text: \"You will not be able to recover this Message Data!\",\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#DD6B55\",\n    confirmButtonText: \"Yes, delete it!\",\n    cancelButtonText: \"No, cancel plz!\",\n    closeOnConfirm: false,\n    closeOnCancel: false\n  }).then(function (result) {\n    if (result.value) {\n      $(\"#messagediv_\" + index).remove();\n      var res_cnt = $(\"[id ^= 'remove_message_']\").length;\n\n      if (res_cnt < 2) {\n        for (var i = 0; i < res_cnt; i++) {\n          $(\"[id ^= 'remove_message_']\").parent().parent().parent()[0].remove();\n        }\n      }\n\n      var msg_idx = 1;\n      $('.message-header').each(function () {\n        console.log('aaa');\n        $(this).html(\"Message #\".concat(msg_idx));\n        msg_idx++;\n      });\n    }\n  });\n}\n\nvar date_format = function date_format(selected_date) {\n  var date = new Date(selected_date);\n  var month_number = date.getMonth() + 1;\n  var hour_num = date.getHours() % 12;\n  var month = month_number < 10 ? '0' + month_number : month_number;\n  var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n  var hour = hour_num < 10 ? '0' + hour_num : hour_num;\n  var minute = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n  return date.getFullYear() + '-' + month + '-' + day + 'T' + hour + ':' + minute + \":00\";\n};\n\nfunction contentAppend(index) {\n  var lib = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var selected_date = '';\n  if (lib && lib.selected_date) selected_date = lib.selected_date;\n  return \"<div id=\\\"messagediv_\".concat(index, \"\\\" class=\\\"messagediv border-1 bg-gray-100 pt-4 mt-2 pb-6 flex flex-wrap\\\">\") + \"<p class=\\\"m-auto text-xl message-header\\\">Message #\".concat(index + 1, \"</p>\") + \"<div class=\\\"px-4 my-2 w-full\\\">\\n            <input hidden name=\\\"library_id[]\\\" id = \\\"library_id_\".concat(index, \"\\\" value = \\\"\") + (lib !== null ? lib.id : 'null') + \"\\\" />\\n            <label class=\\\"label text-sm font-medium text-gray-700\\\" for=\\\"msg_title_\".concat(index, \"\\\">Message Title</label>\") + \"<input\\n                name=\\\"msg_title[]\\\"\\n                id=\\\"msg_title_\".concat(index, \"\\\"\\n                type=\\\"text\\\"\") + 'value = \"' + (lib && lib.msg_title ? lib.msg_title : '') + \"\\\"\\n                class=\\\"block appearance-none w-full py-1 px-2 mb-1 mt-1 text-sm font-medium text-gray-700 leading-normal bg-gray-50 border-gray-200 rounded\\\"                                                               \\n                maxlength=\\\"255\\\"\\n                required>\\n            </input> \\n        </div>\\n        <div class=\\\"px-4 my-2 w-full\\\">\\n            <label class=\\\"label text-sm font-medium text-gray-700\\\" for=\\\"msg_text_\".concat(index, \"\\\">Message Text</label>\\n            <textarea\\n                name=\\\"msg_text[]\\\"\\n                id=\\\"msg_text_\").concat(index, \"\\\"                    \\n                class=\\\"block appearance-none w-full py-1 px-2 mb-1 mt-1 text-sm font-medium text-gray-700 leading-normal bg-gray-50 border-gray-200 rounded\\\"                                                               \\n                maxlength=\\\"512\\\"\") + 'value = \"' + (lib && lib.msg_text ? lib.msg_text : '') + \"\\\"\\n                required>\" + (lib ? lib.msg_text : '') + \"</textarea> \\n        </div>\\n        \\n        <div class=\\\"grid grid-cols-2 w-full px-2\\\">\\n            <div class=\\\"px-2\\\">\\n                <label class=\\\"block text-sm font-medium text-gray-700\\\">\\n                    Message Video\\n                </label>\\n                <div class=\\\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md relative\\\" style = \\\"min-height : 190px\\\">\\n                    <video class = \\\"absolute top-0 left-0 bg-cover bg-center w-full h-full opacity-\" + (lib && lib.upload_video ? '100' : '0') + \"\\\" controls id=\\\"videoPeviewTag_\" + index + \"\\\">\\n                        <source src=\\\"\" + (lib && lib.upload_video ? base_url + '/storage/' + lib.upload_video : '') + \"\\\" id=\\\"videoPreview_\" + index + \"\\\"></source>\\n                    </video>\\n                    \" + (!(lib && lib.upload_video) ? \"<div class=\\\"space-y-1 text-center\\\" id=\\\"new_video_\".concat(index, \"\\\">\\n                                <svg version=\\\"1.1\\\" id=\\\"Capa_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" class=\\\"mx-auto h-10 w-10 text-gray-300\\\"\\n                                        viewBox=\\\"0 0 512 512\\\" style=\\\"enable-background:new 0 0 512 512;\\\" xml:space=\\\"preserve\\\">\\n                                    <g>\\n                                        <g>\\n                                            <path d=\\\"M472,312.642v139c0,11.028-8.972,20-20,20H60c-11.028,0-20-8.972-20-20v-139H0v139c0,33.084,26.916,60,60,60h392\\n                                                c33.084,0,60-26.916,60-60v-139H472z\\\"  fill=\\\"lightgray\\\"/>\\n                                        </g>\\n                                    </g>\\n                                    <g>\\n                                        <g>\\n                                            <polygon points=\\\"256,0.358 131.716,124.642 160,152.926 236,76.926 236,388.642 276,388.642 276,76.926 352,152.926 \\n                                                380.284,124.642\\\"  fill=\\\"darkgray\\\"/>\\n                                        </g>\\n                                    </g>\\n                                </svg>\\n                                <div class=\\\"flex text-sm text-gray-600\\\">\\n                                    <label for=\\\"upload_video_\").concat(index, \"\\\" class=\\\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\\\">\\n                                    <span>Upload a file</span>\\n                                    <input id=\\\"upload_video_\").concat(index, \"\\\" \") + \"value = \\\"\\\"\\n                                    name=\\\"upload_video[]\\\" type=\\\"file\\\" class=\\\"sr-only\\\">\\n                                    </label>\\n                                    <p class=\\\"pl-1\\\">or drag and drop</p>\\n                                </div>\\n                                <p class=\\\"text-xs text-gray-500\\\">\\n                                    Mp4, Avi, Webm up to 10MB\\n                                </p>\\n                            </div>\" : \"<div class=\\\"absolute top-2 right-2\\\">\\n                                <label for=\\\"upload_video_\".concat(index, \"\\\" class=\\\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\\\">\\n                                    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-7 w-7  px-1 py-1\\\" fill=\\\"white\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"black\\\" style=\\\"background-color : cornsilk; border-radius:100%;\\\">\\n                                        <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\\\" />\\n                                    </svg>\\n                                    <input id=\\\"upload_video_\").concat(index, \"\\\" name=\\\"upload_video[]\\\" value=\\\"\") + lib.upload_video + \"\\\" type=\\\"file\\\" class=\\\"sr-only\\\">\\n                                </label>\\n                            </div>\") + \"</div>\\n            </div>\\n            <div class=\\\"px-2\\\">\\n                <label class=\\\"block text-sm font-medium text-gray-700\\\">Message Image</label>\\n                <div class=\\\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md relative\\\" style = \\\"min-height : 190px\\\">\\n                    <div class = \\\"absolute top-0 left-0 bg-cover bg-center w-full h-full\\\" id=\\\"imagePreview_\" + index + \"\\\" \\n                        style=\\\"background-image: url(\" + (lib && lib.upload_image ? base_url + '/storage/' + lib.upload_image : '') + \")\\\">\\n                    </div>\" + (!(lib && lib.upload_image) ? \"<div class=\\\"space-y-1 text-center\\\" id = \\\"new_image_\".concat(index, \"\\\">\\n                        <svg class=\\\"mx-auto h-12 w-12 text-gray-400\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" viewBox=\\\"0 0 48 48\\\" aria-hidden=\\\"true\\\">\\n                            <path d=\\\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" />\\n                        </svg>\\n                        <div class=\\\"flex text-sm text-gray-600\\\">\\n                            <label for=\\\"upload_image_\").concat(index, \"\\\" class=\\\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\\\">\\n                            <span>Upload a file</span>\\n                            <input id=\\\"upload_image_\").concat(index, \"\\\" \") + \"value = \\\"\\\"\\n                            name=\\\"upload_image[]\\\" type=\\\"file\\\" class=\\\"sr-only\\\">\\n                            </label>\\n                            <p class=\\\"pl-1\\\">or drag and drop</p>\\n                        </div>\\n                        <p class=\\\"text-xs text-gray-500\\\"> PNG, JPG, GIF up to 10MB </p>\\n                    </div>\" : \"\\n                    <div class=\\\"absolute top-2 right-2\\\">\\n                        <label for=\\\"upload_image_\".concat(index, \"\\\" class=\\\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\\\">\\n                            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-7 w-7  px-1 py-1\\\" fill=\\\"white\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"black\\\" style=\\\"background-color : cornsilk; border-radius:100%;\\\">\\n                                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\\\" />\\n                            </svg>\\n                            <input id=\\\"upload_image_\").concat(index, \"\\\" name=\\\"upload_image[]\\\" value = \\\"\") + lib.upload_image + \"\\\" type=\\\"file\\\" class=\\\"sr-only\\\">\\n                        </label>\\n                    </div>\") + \"</div>\\n            </div>\\n        </div>\\n        <div class=\\\"grid grid-cols-5\\\">\\n            <div>\\n                <div class=\\\"px-4 my-2 w-full\\\">\\n                    <label class=\\\"label text-sm font-medium text-gray-700\\\" for=\\\"add_url_\".concat(index, \"\\\">Message Url</label>\\n                    <input\\n                        name=\\\"add_url[]\\\"\\n                        id=\\\"add_url_\").concat(index, \"\\\"\\n                        type=\\\"text\\\"\") + 'value = \"' + (lib && lib.add_url ? lib.add_url : '') + \"\\\"\\n                        class=\\\"block appearance-none w-full py-1 px-2 mb-1 mt-1 text-sm font-medium text-gray-700 leading-normal bg-gray-50 border-gray-200 rounded\\\"                                                               \\n                        maxlength=\\\"255\\\"\\n                        >\\n                    </input> \\n                </div>                     \\n            </div>\\n            <div>\\n                <div class=\\\"px-4 my-2 w-full\\\">\\n                    <label class=\\\"label text-sm font-medium text-gray-700\\\" for=\\\"telephone_\".concat(index, \"\\\">Phone Number</label>\\n                    <input\\n                        name=\\\"telephone[]\\\"\\n                        id=\\\"telephone_\").concat(index, \"\\\"\\n                        type=\\\"text\\\"\") + 'value = \"' + (lib && lib.telephone ? lib.telephone : '') + \"\\\"\\n                        class=\\\"block appearance-none w-full py-1 px-2 mb-1 mt-1 text-sm font-medium text-gray-700 leading-normal bg-gray-50 border-gray-200 rounded\\\"                                                               \\n                        maxlength=\\\"255\\\"\\n                        >\\n                    </input> \\n                </div>                     \\n            </div>\\n            <div>\\n                <div class=\\\"px-4 my-2 w-full\\\">\\n                    <label class=\\\"label text-sm font-medium text-gray-700\\\" for=\\\"selected_date_\".concat(index, \"\\\">Date Duration</label>\\n                    <input\\n                        name=\\\"selected_date[]\\\"\\n                        id=\\\"selected_date_\").concat(index, \"\\\"\\n                        type=\\\"number\\\"\") + 'value = \"' + selected_date + \"\\\"\\n                        class=\\\"block appearance-none w-full py-1 px-2 mb-1 mt-1 text-sm font-medium text-gray-700 leading-normal bg-gray-50 border-gray-200 rounded\\\"                                                               \\n                        maxlength=\\\"255\\\"\\n                        >\\n                    </input> \\n                </div>\\n            </div>\\n            <div>\\n                <br>\\n                <p class=\\\"label pt-4 text-sm font-medium text-gray-700\\\">Day(s)</p>\\n            </div>\\n            <div>\\n                <div class=\\\"px-4 my-2 w-full\\\">                      \\n                    <div>\\n                        <span id=\\\"remove_message_\".concat(index, \"\\\" class=\\\"bg-red-500 hover:bg-red-700 text-white py-1 px-4 rounded-md cursor-pointer float-right mt-7\\\">\\n                            <i class=\\\"mr-1 icon ion-md-remove\\\"></i> Remove Message </span>\\n                    </div>\\n                </div>\\n            </div>                                                              \\n        </div>                                              \\n    </div>\\n    <hr />\");\n}\n\n$(document).ready(function () {\n  var res_cnt = $(\"[id ^= 'remove_message_']\").length;\n\n  if (res_cnt < 2) {\n    for (var i = 0; i < res_cnt; i++) {\n      $(\"[id ^= 'remove_message_']\").parent().parent().parent()[0].remove();\n    }\n  }\n\n  $(document).on('change', 'input', function () {\n    if ($(this).attr('id') == 'subCondition_id') return;\n    var selected_val = $(this).val();\n    var conditions = condition_list.find(function (_ref) {\n      var name = _ref.name;\n      return name === selected_val;\n    });\n    var subconditions = subcondition_list.filter(function (_ref2) {\n      var condition_id = _ref2.condition_id;\n      return condition_id == conditions['id'];\n    });\n    var subcondition_html = \"\";\n\n    for (var _i = 0; _i < subconditions.length; _i++) {\n      subcondition_html += '<option value=\"' + subconditions[_i].name + '\">';\n    }\n\n    $(\"#subconditions\").html(subcondition_html);\n  });\n\n  var getLastIndex = function getLastIndex() {\n    var obj = $(\"[id ^= 'messagediv_']\");\n    var length_index = obj.length;\n    if (!length_index) return 0;\n    var last_obj = obj[length_index - 1];\n    var last_id = $(last_obj).attr('id');\n    var index = last_id.split('_')[1];\n    index++;\n    length_index++;\n    return index;\n  };\n\n  var getCurrentCnt = function getCurrentCnt() {\n    return $(\"[id ^= 'messagediv_']\").length;\n  };\n\n  $(\"[id ^= 'remove_message_']\").on('click', function () {\n    var id = $(this).attr('id');\n    var index = id.split('_')[2];\n    deleteMessage(index);\n  });\n  $(\"#create_new_message\").on('click', function () {\n    var lastIndex = getLastIndex();\n\n    if (getCurrentCnt() === 1) {\n      var removeHtml = \"<div>\\n                <div class=\\\"px-4 my-2 w-full\\\">                      \\n                    <div>\\n                        <span id=\\\"remove_message_\".concat(lastIndex - 1, \"\\\" class=\\\"bg-red-500 hover:bg-red-700 text-white py-1 px-4 rounded-md cursor-pointer float-right mt-7\\\">\\n                        <i class=\\\"mr-1 icon ion-md-remove\\\"></i> Remove Message </span>\\n                    </div>\\n                </div>\\n            </div>\");\n      $(\"#messagediv_\".concat(lastIndex - 1)).children().last().append(removeHtml);\n      $(\"[id ^= 'remove_message_']\").on('click', function () {\n        var id = $(this).attr('id');\n        var index = id.split('_')[2];\n        deleteMessage(index);\n      });\n    }\n\n    var html = contentAppend(lastIndex);\n    $(\"#message_wrapper\").append(html);\n    var index = $(\"[id ^= 'remove_message_']\").last().attr('id');\n    index = index.split('_');\n    $(\"[id ^= 'remove_message_']\").last().click(function () {\n      deleteMessage(index[2]);\n    });\n    $(\"[id ^= 'upload_video_']\").on('change', function () {\n      var id = $(this).attr('id');\n      var index = id.split('_')[2];\n      readVideo(this, index);\n    });\n    $(\"[id ^= 'upload_image_']\").on('change', function () {\n      var id = $(this).attr('id');\n      var index = id.split('_')[2];\n      readURL(this, index);\n    });\n    var msg_idx = 1;\n    $('.message-header').each(function () {\n      console.log('aaa');\n      $(this).html(\"Message #\".concat(msg_idx));\n      msg_idx++;\n    });\n  });\n  $(\"#duplicate_new_message\").on('click', function () {\n    var lastIndex = getLastIndex();\n\n    if (getCurrentCnt() === 1) {\n      var removeHtml = \"<div>\\n                <div class=\\\"px-4 my-2 w-full\\\">                      \\n                    <div>\\n                        <span id=\\\"remove_message_\".concat(lastIndex - 1, \"\\\" class=\\\"bg-red-500 hover:bg-red-700 text-white py-1 px-4 rounded-md cursor-pointer float-right mt-7\\\">\\n                        <i class=\\\"mr-1 icon ion-md-remove\\\"></i> Remove Message </span>\\n                    </div>\\n                </div>\\n            </div>\");\n      $(\"#messagediv_\".concat(lastIndex - 1)).children().last().append(removeHtml);\n      $(\"[id ^= 'remove_message_']\").on('click', function () {\n        var id = $(this).attr('id');\n        var index = id.split('_')[2];\n        deleteMessage(index);\n      });\n    }\n\n    id = $('#duplicate_msgs').val();\n    libraries.map(function (each) {\n      if (each.id == id) {\n        var html = contentAppend(lastIndex, each);\n        $(\"#message_wrapper\").append(html);\n      }\n    });\n    var index = $(\"[id ^= 'remove_message_']\").last().attr('id');\n    index = index.split('_');\n    $(\"[id ^= 'remove_message_']\").last().click(function () {\n      deleteMessage(index[2]);\n    });\n    $(\"[id ^= 'upload_video_']\").on('change', function () {\n      var id = $(this).attr('id');\n      var index = id.split('_')[2];\n      readVideo(this, index);\n    });\n    $(\"[id ^= 'upload_image_']\").on('change', function () {\n      var id = $(this).attr('id');\n      var index = id.split('_')[2];\n      readURL(this, index);\n    });\n    var msg_idx = 1;\n    $('.message-header').each(function () {\n      console.log('aaa');\n      $(this).html(\"Message #\".concat(msg_idx));\n      msg_idx++;\n    });\n  });\n\n  function readURL(input, index) {\n    if (input.files && input.files[0]) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        $(\"#imagePreview_\".concat(index)).css('background-image', 'url(' + e.target.result + ')');\n        $(\"#imagePreview_\".concat(index)).hide();\n        $(\"#imagePreview_\".concat(index)).fadeIn(650);\n        var new_image_div = $(\"#new_image_\".concat(index));\n\n        if (new_image_div.length) {\n          new_image_div.parent().append(\"<div class=\\\"absolute top-2 right-2\\\">\\n                        <label id =\\\"upload_image_label_\".concat(index, \"\\\" for=\\\"upload_image_\").concat(index, \"\\\" class=\\\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\\\">\\n                            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-7 w-7  px-1 py-1\\\" fill=\\\"white\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"black\\\" style=\\\"background-color : cornsilk; border-radius:100%;\\\">\\n                                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\\\" />\\n                            </svg>    \\n                        </label>\\n                    </div>\"));\n          new_image_div.remove();\n          $(input).appendTo(\"#upload_image_label_\".concat(index));\n          $(\"[id ^= 'upload_image_']\").on('change', function () {\n            var id = $(this).attr('id');\n            var index = id.split('_')[2];\n            readURL(this, index);\n          });\n        }\n      };\n\n      reader.readAsDataURL(input.files[0]);\n    }\n  }\n\n  $(\"[id ^= 'upload_image_']\").on('change', function () {\n    var id = $(this).attr('id');\n    var index = id.split('_')[2];\n    readURL(this, index);\n  });\n\n  function readVideo(input, index) {\n    if (input.files && input.files[0]) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        $(\"#videoPreview_\".concat(index)).attr('src', e.target.result);\n        $(\"#videoPeviewTag_\".concat(index)).css('opacity', 100);\n        $(\"#videoPeviewTag_\".concat(index)).get(0).load();\n        $(\"#videoPeviewTag_\".concat(index)).get(0).play();\n        var new_video_div = $(\"#new_video_\".concat(index));\n\n        if (new_video_div.length) {\n          new_video_div.parent().append(\"<div class=\\\"absolute top-2 right-2\\\">\\n                            <label id =\\\"upload_video_label_\".concat(index, \"\\\" for=\\\"upload_video_\").concat(index, \"\\\" class=\\\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\\\">\\n                                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"h-7 w-7  px-1 py-1\\\" fill=\\\"white\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"black\\\" style=\\\"background-color : cornsilk; border-radius:100%;\\\">\\n                                    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\\\" />\\n                                </svg>\\n                            </label>\\n                        </div>\"));\n          new_video_div.remove();\n          $(input).appendTo(\"#upload_video_label_\".concat(index));\n          $(\"[id ^= 'upload_video_']\").on('change', function () {\n            var id = $(this).attr('id');\n            var index = id.split('_')[2];\n            readVideo(this, index);\n          });\n        }\n      };\n\n      reader.onprogress = function (e) {};\n\n      reader.readAsDataURL(input.files[0]);\n    }\n  }\n\n  $(\"[id ^= 'upload_video_']\").on('change', function () {\n    var id = $(this).attr('id');\n    var index = id.split('_')[2];\n    readVideo(this, index);\n  });\n  $(\"#campaignForm\").submit(function (e) {\n    e.preventDefault();\n    var flag = true;\n    var data = $('#campaignForm').serializeArray().reduce(function (obj, item) {\n      switch (item.name) {\n        case 'library_id[]':\n        case 'add_url[]':\n        case 'msg_title[]':\n        case 'msg_text[]':\n        case 'telephone[]':\n        case 'selected_date[]':\n          if (!obj[item.name]) obj[item.name] = [];\n          obj[item.name].push(item.value);\n          break;\n\n        default:\n          obj[item.name] = item.value;\n      }\n\n      return obj;\n    }, {});\n    data['library_id[]'].map(function (each, idx) {\n      var lib = libraries.find(function (item) {\n        return item.id == each;\n      });\n      if (!lib) return;\n      $(\"[id ^= 'library_id_']\").each(function () {\n        var id = $(this).attr('id');\n        var index_id = id.split('_')[2];\n        var lib_id = $(\"#library_id_\".concat(index_id)).val();\n        if (lib_id != each) return; // Check this message title is existing on library list.\n\n        var title_lib = libraries.find(function (item) {\n          return item.msg_title == data['msg_title[]'][idx];\n        });\n        if (title_lib) if (!(data['add_url[]'][idx] == lib.add_url && data['msg_text[]'][idx] == lib.msg_text && data['selected_date[]'][idx] == date_format(lib.selected_date) && data['telephone[]'][idx] == lib.telephone) || $(\"#upload_video_\".concat(index_id)).val() || $(\"#upload_image_\".concat(index_id)).val()) {\n          $(\"#msg_title_\".concat(index_id)).val('');\n          $(\"#msg_title_\".concat(index_id)).focus();\n          flag = false;\n        }\n      });\n    });\n\n    if (flag) {\n      $(\"#campaignForm\").unbind('submit').submit();\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/js/campaign.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/js/campaign.js"]();
/******/ 	
/******/ })()
;